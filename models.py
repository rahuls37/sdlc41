from flask_sqlalchemy import SQLAlchemy\nfrom flask_bcrypt import Bcrypt\n\nbcrypt = Bcrypt()\ndb = SQLAlchemy()\n\n\nclass User(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(80), unique=True, nullable=False)\n    password_hash = db.Column(db.String(128), nullable=False)\n    visualizations = db.relationship('Visualization', backref='user', lazy=True)\n\n    def __repr__(self):\n        return f'<User {self.username}>'\n\n    @property\ndef password(self):\n        raise AttributeError('password is not a readable attribute')\n\n    @password.setter\ndef set_password(self, password):\n        self.password_hash = bcrypt.generate_password_hash(password).decode('utf-8')\n\n    def check_password(self, password):\n        return bcrypt.check_password_hash(self.password_hash, password)\n\n\nclass Visualization(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)\n    chart_type = db.Column(db.String(50), nullable=False)\n    customization_settings = db.Column(db.JSON, nullable=True)\n    data = db.Column(db.JSON, nullable=False)\n\n    def __repr__(self):\n        return f'<Visualization {self.id}>'\n\n\nclass Report(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)\n    visualization_id = db.Column(db.Integer, db.ForeignKey('visualization.id'), nullable=False)\n    report_type = db.Column(db.String(50), nullable=False)\n    file_name = db.Column(db.String(255), nullable=False)\n\n    def __repr__(self):\n        return f'<Report {self.id}>'\n